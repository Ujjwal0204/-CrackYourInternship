class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        sort(nums.begin(),nums.end());
        int n=nums.size();
        vector<vector<int>> ans;
        for(int i=0;i<n-3;i++){
            
            for(int j=i+1;j<n-2;j++){
                int front=j+1;
                int back=n-1;
                long long tar = (long long)target - (long long)nums[i] - (long long)nums[j];
                while(front<back){
                    int sum=nums[front]+nums[back];
                    if(sum<tar)
                        front++;
                    else if(sum>tar)
                        back--;
                    else{
                        ans.push_back({nums[i],nums[j],nums[front],nums[back]});
                        int f1=front,b1=back;
                        while(front<back && nums[front]==nums[f1])  front++;
                        while(front<back && nums[front]==nums[b1])  back--;
                    }
                }
                while(j+1<n && nums[j]==nums[j+1])
                    j++;
            }

            while(i+1<n && nums[i]==nums[i+1])
                i++;
        }
        return ans;
    }
};
