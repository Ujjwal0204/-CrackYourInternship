//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int r,c;
    int row[4]={1,-1,0,0};
    int col[4]={0,0,1,-1};
    bool valid(int i,int j){
        return i>=0&&i<r&&j>=0&&j<c;
    }
    vector<vector<char>> fill(int n, int m, vector<vector<char>> mat)
    {
        // code here
        r=n;
        c=m;
        queue<pair<int,int>>q;
        // first row
        for(int i=0;i<c;i++){
            if(mat[0][i]=='O'){
                mat[0][i]='T';
                q.push(make_pair(0,i));
            }
        }
        
        // FIRST COLUMN
        for(int i=1;i<r;i++){
            if(mat[i][0]=='O'){
                mat[i][0]='T';
                q.push(make_pair(i,0));
            }
        }
        
        // last row
        for(int i=1;i<c;i++){
            if(mat[r-1][i]=='O'){
                mat[r-1][i]='T';
                q.push(make_pair(r-1,i));
            }
        }
        
        // last col
        for(int i=1;i<r-1;i++){
            if(mat[i][c-1]=='O'){
                mat[i][c-1]='T';
                q.push(make_pair(i,c-1));
            }
        }
        while(!q.empty()){
            int i=q.front().first;
            int j=q.front().second;
            q.pop();
            for(int k=0;k<4;k++){
                if(valid(i+row[k],j+col[k])&&mat[i+row[k]][j+col[k]]=='O'){
                    mat[i+row[k]][j+col[k]]='T';
                    q.push(make_pair(i+row[k],j+col[k]));
                }
            }
        }
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(mat[i][j]=='O')
                    mat[i][j]='X';
                else if(mat[i][j]=='T')
                    mat[i][j]='O';
            }
        }
        return mat;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n, m;
        cin>>n>>m;
        vector<vector<char>> mat(n, vector<char>(m, '.'));
        for(int i = 0;i < n;i++)
            for(int j=0; j<m; j++)
                cin>>mat[i][j];
        
        Solution ob;
        vector<vector<char>> ans = ob.fill(n, m, mat);
        for(int i = 0;i < n;i++) {
            for(int j = 0;j < m;j++) {
                cout<<ans[i][j]<<" ";
            }
            cout<<"\n";
        }
    }
    return 0;
}
// } Driver Code Ends
