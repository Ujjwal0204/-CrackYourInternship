//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution
{
    public:
    vector<int> PrevSmaller(int arr[],int n){
        stack<int> s;
        vector<int> ans;
        for(int i=0;i<n;i++){
            while(!s.empty() && arr[i]<=arr[s.top()]){
                s.pop();
            }
            if(s.empty())   ans.push_back(-1);
            else
                ans.push_back(s.top());
            s.push(i);
        }
        return ans;
    }
    vector<int> NextSmaller(int arr[],int n){
        stack<int> s;
        vector<int> ans;
        for(int i=n-1;i>=0;i--){
            while(!s.empty() && arr[i]<=arr[s.top()]){
                s.pop();
            }
            if(s.empty())   ans.push_back(n);
            else
                ans.push_back(s.top());
            s.push(i);
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
    //Function to find maximum of minimums of every window size.
    vector <int> maxOfMin(int arr[], int n)
    {
        // Your code here
        vector<int>prev=PrevSmaller(arr,n);
        vector<int>next=NextSmaller(arr,n);
        vector<int> ans(n);
        
        for(int i=0;i<n;i++){
            int c=next[i]-prev[i]-1;
            ans[c-1]=max(ans[c-1],arr[i]);
        }
        
        int a=0;
        for(int i=n-1;i>=0;i--){
            if(ans[i]!=0){
                ans[i]=max(ans[i],a);
                a=ans[i];
            }
            else
                ans[i]=a;
        }
        return ans;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;

    while (t--) {
        int n;
        cin >> n;
        int a[n];
        for (int i = 0; i < n; i++) cin >> a[i];
        Solution ob;
        vector <int> res = ob.maxOfMin(a, n);
        for (int i : res) cout << i << " ";
        cout << endl;
    }
    return 0;
}

// } Driver Code Ends
