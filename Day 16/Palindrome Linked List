/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode* temp = head;
        int cnt=0;
        while(temp){
            cnt++;
            temp=temp->next;
        }
        temp = head;
        for(int i=1;i<=cnt/2;i++){
        temp=temp->next;
        }

        ListNode* prevptr=NULL;
        ListNode*currptr=temp;
        ListNode* nextptr;
        while (currptr!=NULL)
        {
            nextptr=currptr->next;
            currptr->next=prevptr;

            prevptr=currptr;
            currptr=nextptr;
        }

        while(prevptr){
            if(head->val!=prevptr->val) return false;
            head=head->next;
            prevptr=prevptr->next;
        }
        return true;
    }
};
